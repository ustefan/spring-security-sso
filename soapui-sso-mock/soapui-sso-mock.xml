<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="d329248e-97e3-4e9e-a7f9-f0d4e6790054" activeEnvironment="Default" name="soapui-sso-mock" resourceRoot="" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="f82b2df6-838d-4366-b44c-f0deb9b8b8c4" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:8089" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://SUrziceanu:8089/</con:endpoint><con:endpoint>http://localhost:8089</con:endpoint></con:endpoints><con:resource name="Login" path="/login" id="e3832d16-1016-4027-a239-2e6560503e68"><con:settings/><con:parameters/><con:method name="Login" id="42782722-babc-4493-a7f3-9286ad3c6224" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/html</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" id="0730eacf-b585-4853-bfe1-3a8850ee5a7c" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8089</con:endpoint><con:request/><con:originalUri>http://localhost/login</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:restMockService id="d580c3d1-57f6-498f-8155-845afe035250" port="8089" path="/" host="SUrziceanu" name="sso-login"><con:settings/><con:properties/><con:restMockAction name="/login" method="GET" resourcePath="/login" id="9abad610-91b5-4244-9bbb-435878358c45"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="983b91dd-56da-428f-b638-0dee8966fed7" httpResponseStatus="200" mediaType="text/xml"><con:settings/><con:responseContent><![CDATA[<html>
<body>

<form action="http://localhost:8080">
  Token:
  <input type="text" name="token" value="123">
  <input type="submit" value="Submit">
</form>

</body>
</html>]]></con:responseContent><con:header><con:name>Content-type</con:name><con:value>text/html</con:value></con:header></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>